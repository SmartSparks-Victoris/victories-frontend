@tailwind base;
@tailwind components;
@tailwind utilities;

@font-face {
  font-family: 'Poppins';
  src: url('/fonts/Poppins/Poppins-Regular.ttf') format('truetype');
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Roboto';
  src: url('/fonts/Roboto/Roboto-Regular.ttf') format('truetype');
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}

:root {
  --background: #ffffff;
  --foreground: #171717;
  --guestNav: 80px;
  --adminNav: 229px;
  --adminNavSmall: 80px;
  --searchNav: 76px;
  --paddingAdminTop: 40px;
  --paddingAdminLeft: 40px;
  --mainColor: #7e4556;
  --mainColorAlpha: #decad0;
  --textColor: #000000;
  --backgroundColor: #fff4f7;
  --textWhite: #fff4f7;
  --errorColor: #be0202;
  --placeHolderColor: #666263;
  --listOptionHoverColor: #decad0;
  --borderColor: rgba(0, 0, 0, 0.4);
  --backgroundOpacity: rgba(255, 244, 247, 0.2);
  --openStroke: #be0202;
  --openColor: #ffd6dd;
  --completedColor: #c6edd0;
  --completedStroke: #008132;
  --inProgressStroke: #c0760d;
  --inProgressColor: #ffe9c7;
  --urgentStroke: #452033;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

input::placeholder {
  color: var(--placeHolderColor); /* Change to the desired color */
  opacity: 1; /* Adjust opacity if needed */
}

body {
  color: var(--foreground);
  /* background: var(--background); */
  font-family: 'Poppins', Times, serif;
  overflow-x: hidden;
  background-attachment: fixed;
}

svg {
  display: flex;
}

.owner-table th,
.owner-table td {
  border: 1px solid #231318;
}

.owner-table th,
.owner-table td {
  padding: 40px 28px;
}

table td,
table th {
  text-align: center;
}

.resultsDiv {
  width: 100%;
  overflow-x: auto;
  border: 1px solid #7e4556;
  border-radius: 24px;
  box-shadow: 0px 4px 8px 2px rgba(0, 0, 0, 0.2); /* Adjust the color and opacity as needed */
}

.results {
  width: 100%;
}

.results th {
  padding: 32px 16px;
  @apply font-roboto font-semibold text-[14px] text-[#452033];
}

/* .results tr:first-of-type {
  @apply border-y-[1px] border-b-solid border-y-[#7E4556];
} */

.results tr:first-of-type {
  @apply border-y-[1px] border-solid border-y-[#7E4556];
}

.results tr:not(:last-of-type) {
  border-bottom: 1px solid #999999;
}

.results td {
  padding: 20px 16px;
}

.pagePadding {
  @apply pl-[calc(var(--adminNavSmall)+var(--paddingAdminLeft))]
         md:pl-[calc(var(--adminNav)+var(--paddingAdminLeft))]
         pt-[calc(var(--searchNav)+var(--paddingAdminTop))]
         pb-[var(--paddingAdminTop)]
         pr-[var(--paddingAdminLeft)]
         bg-[var(--textWhite)];
}

input[type='checkbox'] {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

/* Custom checkbox container */
.custom-checkbox {
  cursor: pointer;
  position: relative;
  display: inline-block;
  width: 26px;
  height: 26px;
  border: 1px solid #7e4556;
  border-radius: 4px;
  background-color: #f0f0f0; /* Background color when unchecked */
  transition: background-color 0.2s; /* Optional: smooth transition */
}

/* Checkmark (hidden by default) */
.custom-checkbox::after {
  content: '';
  position: absolute;
  display: none;
  left: 10px;
  top: 5px;
  width: 6px;
  height: 10px;
  border: solid white;
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
}

/* Show the checkmark when the checkbox is checked */
input[type='checkbox']:checked + .custom-checkbox::after {
  display: block;
}

/* Change background color when checked */
input[type='checkbox']:checked ~ .custom-checkbox {
  background-color: #7e4556; /* Background color when checked */
}

/* Optional: Hover effect */
.custom-checkbox:hover {
  background-color: #d1d1d1; /* Slightly darker on hover when unchecked */
}

/* Hover effect (optional) */
/* input[type='checkbox']:hover + .custom-checkbox {
  background-color: #f0f0f0;
} */

/* .card:hover .card-inner {
  transform: rotateY(-180deg);
}

.card-back {
  transform: rotateY(-180deg);
} */

/* input[type='text'],
input[type='email'],
input[type='password'],
input[type='number'],
select,
textarea {
  @apply border-2 border-gray-300 focus:ring-2 focus:ring-gray-500 rounded-[16px] p-[8px] mx-[8px] my-[8px];
}

input[type='submit'],
button {
  @apply bg-slate-400 rounded-full my-[8px] text-white py-[8px] px-[24px] inline-block;
}

nav button {
  @apply !bg-transparent !rounded-none !my-0 !mx-0 !text-black !py-0 !px-0;
}

p.fieldError {
  @apply text-red-500;
} */
@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
  .rotate-y-180 {
    transform: rotateY(180deg);
  }

  .-rotate-y-180 {
    transform: rotateY(-180deg);
  }
}

::selection {
  background-color: var(
    --mainColorAlpha
  ); /* Background color of the selected text */
  color: var(--textColor); /* Text color of the selected text */
}

